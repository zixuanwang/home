<?php

namespace Proxies\__CG__\Acme\MyBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Community extends \Acme\MyBundle\Entity\Community implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'address', 'builder', 'city', 'county', 'description', 'facades', 'homes', 'id', 'images', 'latitude', 'longitude', 'map', 'name', 'school_district', 'schools', 'state', 'updated', 'zipcode');
        }

        return array('__isInitialized__', 'address', 'builder', 'city', 'county', 'description', 'facades', 'homes', 'id', 'images', 'latitude', 'longitude', 'map', 'name', 'school_district', 'schools', 'state', 'updated', 'zipcode');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Community $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function setAddress($address)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAddress', array($address));

        return parent::setAddress($address);
    }

    /**
     * {@inheritDoc}
     */
    public function getAddress()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAddress', array());

        return parent::getAddress();
    }

    /**
     * {@inheritDoc}
     */
    public function setBuilder($builder)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBuilder', array($builder));

        return parent::setBuilder($builder);
    }

    /**
     * {@inheritDoc}
     */
    public function getBuilder()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBuilder', array());

        return parent::getBuilder();
    }

    /**
     * {@inheritDoc}
     */
    public function setCity($city)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCity', array($city));

        return parent::setCity($city);
    }

    /**
     * {@inheritDoc}
     */
    public function getCity()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCity', array());

        return parent::getCity();
    }

    /**
     * {@inheritDoc}
     */
    public function setCounty($county)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCounty', array($county));

        return parent::setCounty($county);
    }

    /**
     * {@inheritDoc}
     */
    public function getCounty()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCounty', array());

        return parent::getCounty();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription($description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', array($description));

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', array());

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setLatitude($latitude)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLatitude', array($latitude));

        return parent::setLatitude($latitude);
    }

    /**
     * {@inheritDoc}
     */
    public function getLatitude()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLatitude', array());

        return parent::getLatitude();
    }

    /**
     * {@inheritDoc}
     */
    public function setLongitude($longitude)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLongitude', array($longitude));

        return parent::setLongitude($longitude);
    }

    /**
     * {@inheritDoc}
     */
    public function getLongitude()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLongitude', array());

        return parent::getLongitude();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', array($name));

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', array());

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setSchoolDistrict($schoolDistrict)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSchoolDistrict', array($schoolDistrict));

        return parent::setSchoolDistrict($schoolDistrict);
    }

    /**
     * {@inheritDoc}
     */
    public function getSchoolDistrict()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSchoolDistrict', array());

        return parent::getSchoolDistrict();
    }

    /**
     * {@inheritDoc}
     */
    public function setState($state)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setState', array($state));

        return parent::setState($state);
    }

    /**
     * {@inheritDoc}
     */
    public function getState()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getState', array());

        return parent::getState();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdated($updated)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdated', array($updated));

        return parent::setUpdated($updated);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdated()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdated', array());

        return parent::getUpdated();
    }

    /**
     * {@inheritDoc}
     */
    public function setZipcode($zipcode)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setZipcode', array($zipcode));

        return parent::setZipcode($zipcode);
    }

    /**
     * {@inheritDoc}
     */
    public function getZipcode()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getZipcode', array());

        return parent::getZipcode();
    }

    /**
     * {@inheritDoc}
     */
    public function addFacade(\Acme\MyBundle\Entity\Photo $facades)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addFacade', array($facades));

        return parent::addFacade($facades);
    }

    /**
     * {@inheritDoc}
     */
    public function removeFacade(\Acme\MyBundle\Entity\Photo $facades)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeFacade', array($facades));

        return parent::removeFacade($facades);
    }

    /**
     * {@inheritDoc}
     */
    public function getFacades()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFacades', array());

        return parent::getFacades();
    }

    /**
     * {@inheritDoc}
     */
    public function addHome(\Acme\MyBundle\Entity\Home $homes)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addHome', array($homes));

        return parent::addHome($homes);
    }

    /**
     * {@inheritDoc}
     */
    public function removeHome(\Acme\MyBundle\Entity\Home $homes)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeHome', array($homes));

        return parent::removeHome($homes);
    }

    /**
     * {@inheritDoc}
     */
    public function getHomes()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHomes', array());

        return parent::getHomes();
    }

    /**
     * {@inheritDoc}
     */
    public function addImage(\Acme\MyBundle\Entity\Photo $images)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addImage', array($images));

        return parent::addImage($images);
    }

    /**
     * {@inheritDoc}
     */
    public function removeImage(\Acme\MyBundle\Entity\Photo $images)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeImage', array($images));

        return parent::removeImage($images);
    }

    /**
     * {@inheritDoc}
     */
    public function getImages()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImages', array());

        return parent::getImages();
    }

    /**
     * {@inheritDoc}
     */
    public function setMap(\Acme\MyBundle\Entity\Photo $map = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMap', array($map));

        return parent::setMap($map);
    }

    /**
     * {@inheritDoc}
     */
    public function getMap()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMap', array());

        return parent::getMap();
    }

    /**
     * {@inheritDoc}
     */
    public function addSchool(\Acme\MyBundle\Entity\School $schools)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addSchool', array($schools));

        return parent::addSchool($schools);
    }

    /**
     * {@inheritDoc}
     */
    public function removeSchool(\Acme\MyBundle\Entity\School $schools)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeSchool', array($schools));

        return parent::removeSchool($schools);
    }

    /**
     * {@inheritDoc}
     */
    public function getSchools()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSchools', array());

        return parent::getSchools();
    }

}
