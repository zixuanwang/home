<?php

namespace Proxies\__CG__\Acme\MyBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class HomeModel extends \Acme\MyBundle\Entity\HomeModel implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'album', 'description', 'floor_plan', 'homes', 'id', 'name', 'num_baths', 'num_beds', 'num_garages', 'num_stories', 'square_feet', 'updated');
        }

        return array('__isInitialized__', 'album', 'description', 'floor_plan', 'homes', 'id', 'name', 'num_baths', 'num_beds', 'num_garages', 'num_stories', 'square_feet', 'updated');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (HomeModel $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', array($name));

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', array());

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setNumBaths($numBaths)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNumBaths', array($numBaths));

        return parent::setNumBaths($numBaths);
    }

    /**
     * {@inheritDoc}
     */
    public function getNumBaths()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNumBaths', array());

        return parent::getNumBaths();
    }

    /**
     * {@inheritDoc}
     */
    public function setNumBeds($numBeds)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNumBeds', array($numBeds));

        return parent::setNumBeds($numBeds);
    }

    /**
     * {@inheritDoc}
     */
    public function getNumBeds()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNumBeds', array());

        return parent::getNumBeds();
    }

    /**
     * {@inheritDoc}
     */
    public function setNumGarages($numGarages)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNumGarages', array($numGarages));

        return parent::setNumGarages($numGarages);
    }

    /**
     * {@inheritDoc}
     */
    public function getNumGarages()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNumGarages', array());

        return parent::getNumGarages();
    }

    /**
     * {@inheritDoc}
     */
    public function setNumStories($numStories)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNumStories', array($numStories));

        return parent::setNumStories($numStories);
    }

    /**
     * {@inheritDoc}
     */
    public function getNumStories()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNumStories', array());

        return parent::getNumStories();
    }

    /**
     * {@inheritDoc}
     */
    public function setSquareFeet($squareFeet)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSquareFeet', array($squareFeet));

        return parent::setSquareFeet($squareFeet);
    }

    /**
     * {@inheritDoc}
     */
    public function getSquareFeet()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSquareFeet', array());

        return parent::getSquareFeet();
    }

    /**
     * {@inheritDoc}
     */
    public function addHome(\Acme\MyBundle\Entity\Home $homes)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addHome', array($homes));

        return parent::addHome($homes);
    }

    /**
     * {@inheritDoc}
     */
    public function removeHome(\Acme\MyBundle\Entity\Home $homes)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeHome', array($homes));

        return parent::removeHome($homes);
    }

    /**
     * {@inheritDoc}
     */
    public function getHomes()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHomes', array());

        return parent::getHomes();
    }

    /**
     * {@inheritDoc}
     */
    public function setAlbum(\Acme\MyBundle\Entity\Album $album = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAlbum', array($album));

        return parent::setAlbum($album);
    }

    /**
     * {@inheritDoc}
     */
    public function getAlbum()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAlbum', array());

        return parent::getAlbum();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription($description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', array($description));

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', array());

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdated($updated)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdated', array($updated));

        return parent::setUpdated($updated);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdated()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdated', array());

        return parent::getUpdated();
    }

}
