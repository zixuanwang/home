<?php

namespace Proxies\__CG__\Acme\MyBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Home extends \Acme\MyBundle\Entity\Home implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'address', 'community', 'description', 'direction', 'hoa', 'home_model', 'id', 'latitude', 'longitude', 'lot_size', 'price', 'price_history', 'price_per_foot', 'status', '' . "\0" . 'Acme\\MyBundle\\Entity\\Home' . "\0" . 'users', 'year_built');
        }

        return array('__isInitialized__', 'address', 'community', 'description', 'direction', 'hoa', 'home_model', 'id', 'latitude', 'longitude', 'lot_size', 'price', 'price_history', 'price_per_foot', 'status', '' . "\0" . 'Acme\\MyBundle\\Entity\\Home' . "\0" . 'users', 'year_built');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Home $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function setDirection($direction)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDirection', array($direction));

        return parent::setDirection($direction);
    }

    /**
     * {@inheritDoc}
     */
    public function getDirection()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDirection', array());

        return parent::getDirection();
    }

    /**
     * {@inheritDoc}
     */
    public function setHoa($hoa)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHoa', array($hoa));

        return parent::setHoa($hoa);
    }

    /**
     * {@inheritDoc}
     */
    public function getHoa()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHoa', array());

        return parent::getHoa();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setLatitude($latitude)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLatitude', array($latitude));

        return parent::setLatitude($latitude);
    }

    /**
     * {@inheritDoc}
     */
    public function getLatitude()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLatitude', array());

        return parent::getLatitude();
    }

    /**
     * {@inheritDoc}
     */
    public function setLongitude($longitude)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLongitude', array($longitude));

        return parent::setLongitude($longitude);
    }

    /**
     * {@inheritDoc}
     */
    public function getLongitude()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLongitude', array());

        return parent::getLongitude();
    }

    /**
     * {@inheritDoc}
     */
    public function setLotSize($lotSize)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLotSize', array($lotSize));

        return parent::setLotSize($lotSize);
    }

    /**
     * {@inheritDoc}
     */
    public function getLotSize()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLotSize', array());

        return parent::getLotSize();
    }

    /**
     * {@inheritDoc}
     */
    public function setPrice($price)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPrice', array($price));

        return parent::setPrice($price);
    }

    /**
     * {@inheritDoc}
     */
    public function getPrice()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrice', array());

        return parent::getPrice();
    }

    /**
     * {@inheritDoc}
     */
    public function setPricePerFoot($pricePerFoot)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPricePerFoot', array($pricePerFoot));

        return parent::setPricePerFoot($pricePerFoot);
    }

    /**
     * {@inheritDoc}
     */
    public function getPricePerFoot()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPricePerFoot', array());

        return parent::getPricePerFoot();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatus($status)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatus', array($status));

        return parent::setStatus($status);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatus', array());

        return parent::getStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setYearBuilt($yearBuilt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setYearBuilt', array($yearBuilt));

        return parent::setYearBuilt($yearBuilt);
    }

    /**
     * {@inheritDoc}
     */
    public function getYearBuilt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getYearBuilt', array());

        return parent::getYearBuilt();
    }

    /**
     * {@inheritDoc}
     */
    public function setCommunity(\Acme\MyBundle\Entity\Community $community = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCommunity', array($community));

        return parent::setCommunity($community);
    }

    /**
     * {@inheritDoc}
     */
    public function getCommunity()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCommunity', array());

        return parent::getCommunity();
    }

    /**
     * {@inheritDoc}
     */
    public function setHomeModel(\Acme\MyBundle\Entity\HomeModel $homeModel = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHomeModel', array($homeModel));

        return parent::setHomeModel($homeModel);
    }

    /**
     * {@inheritDoc}
     */
    public function getHomeModel()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHomeModel', array());

        return parent::getHomeModel();
    }

    /**
     * {@inheritDoc}
     */
    public function setAddress($address)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAddress', array($address));

        return parent::setAddress($address);
    }

    /**
     * {@inheritDoc}
     */
    public function getAddress()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAddress', array());

        return parent::getAddress();
    }

    /**
     * {@inheritDoc}
     */
    public function addPriceHistory(\Acme\MyBundle\Entity\PriceHistory $priceHistory)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPriceHistory', array($priceHistory));

        return parent::addPriceHistory($priceHistory);
    }

    /**
     * {@inheritDoc}
     */
    public function removePriceHistory(\Acme\MyBundle\Entity\PriceHistory $priceHistory)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removePriceHistory', array($priceHistory));

        return parent::removePriceHistory($priceHistory);
    }

    /**
     * {@inheritDoc}
     */
    public function getPriceHistory()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPriceHistory', array());

        return parent::getPriceHistory();
    }

    /**
     * {@inheritDoc}
     */
    public function addUser(\Acme\MyBundle\Entity\User $users)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addUser', array($users));

        return parent::addUser($users);
    }

    /**
     * {@inheritDoc}
     */
    public function removeUser(\Acme\MyBundle\Entity\User $users)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeUser', array($users));

        return parent::removeUser($users);
    }

    /**
     * {@inheritDoc}
     */
    public function getUsers()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUsers', array());

        return parent::getUsers();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription($description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', array($description));

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', array());

        return parent::getDescription();
    }

}
